# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    paths:
      - "version.txt"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: import Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get version as env variable
        run: export VERSION_TXT=$(cat version.txt)
      - name: Create a tag
        run: |
          git config user.name = "Github Actions"
          git config user.email = "actions@github.com"
          git tag -a v${{ env.VERSION_TXT }} -m "Version ${{ env.VERSION_TXT }}"
          git push origin v${{ env.VERSION_TXT }}
      - name: Inject version to gradle.properties
        run: node ./tools/build.js
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "microsoft"
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build Artifact
          path: build/libs/
