# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    paths:
      - "version.txt"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: import Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Inject version to gradle.properties
        uses: actions/github-script@v6.3.3
        with:
          script: |
            const fs = require("fs");
            fs.readFile("gradle.properties", "utf8", (err, old) => {
              if (err) throw err;
              fs.readFile("version.txt", (err, v) => {
                if (err) throw err;
                fs.writeFile("gradle.properties", old.replace("$version", v), "utf8", (err) => {
                  if (err) throw err;
                  console.log("gradle.properties succesfully written");
                  console.log(old.replace("$version", v));
                  return;
                })
              })
            })
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "microsoft"
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build Artifact
          path: build/libs/
